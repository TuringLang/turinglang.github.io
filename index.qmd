---
# pagetitle: "Turing"
toc: false
page-layout: custom
section-divs: false
hide-description: true
description: |
  Turing.jl is a probabilistic programming language and Bayesian modelling framework for the Julia programming language.
---

```{=html}
<div class="content-panel">
  <div class="d-flex flex-column align-items-center gap-0" style="padding:6rem 0;">
    <image src="assets/images/turing-logo.svg" width="150px" alt="Three normal probability distributions">
    <span style="font-size:4rem;font-weight:700;">
      Turing.jl
    </span>
    <span class="display-6 d-block text-center pb-4 display-md-5 display-lg-4">
      Bayesian inference with probabilistic programming
    </span>
    <div class="d-flex flex-row flex-wrap justify-content-center gap-2">
      <a href="https://turinglang.org/docs/tutorials/docs-00-getting-started/" class="button--fill btn">
        Tutorials
      </a>
      <a href="/library" class="button btn">
        Ecosystem
      </a>
      <a href="https://github.com/TuringLang" class="button btn">
        View on GitHub
      </a>
    </div>
  </div>
  <div class="d-flex flex-row flex-wrap justify-content-center gap-3" style="padding-bottom:6rem;">
    <div class="card">
      <div class="card-title">
        Intuitive
      </div>
      Turing models are easy to write and communicate — syntax is close to mathematical notations. 
    </div>
    <div class="card">
      <div class="card-title">
        General-purpose
      </div>
      Turing supports models with discrete parameters and stochastic control flow. 
    </div>
    <div class="card">
      <div class="card-title">
        Modular & composable
      </div>
      Turing is modular, written entirely in Julia, and is interoperable with the powerful Julia ecosystem.
    </div>
  </div>
</div>
```
<div class="content-panel">
<div class="d-flex flex-row flex-wrap justify-content-center gap-3">
<div style="min-width:420px; max-width:420px;text-align:right;padding:0.5rem;">
  <div style="font-size:x-large;font-weight:700;padding-bottom:0.5rem;">
  Hello, World in Turing
  </div>
  Some text about how easy it is to [get going](https://turinglang.org/docs/tutorials/00-introduction/).
</div>
<div style="min-width:500px;">
```julia
@model function coinflip(; N::Int)
    # Prior belief about the probability of heads
    p ~ Beta(1, 1)

    # Heads or tails of a coin are drawn from `N`
    # Bernoulli distributions with success rate `p`
    y ~ filldist(Bernoulli(p), N)

    return y
end;
```
</div>
</div>
<div class="d-flex flex-row flex-wrap justify-content-center gap-3">
<div style="min-width:500px;">
```julia
@model function putting_model(d, n; jitter=1e-4)
    v ~ Gamma(2, 1)
    l ~ Gamma(4, 1)
    f = GP(v * with_lengthscale(SEKernel(), l))
    f_latent ~ f(d, jitter)
    binomials = Binomial.(n, logistic.(f_latent))
    y ~ product_distribution(binomials)
    return (fx=f(d, jitter), f_latent=f_latent, y=y)
end
```
</div>
<div style="min-width:420px; max-width:420px;padding:0.5rem;">
  <div style="font-size:x-large;font-weight:700;padding-bottom:0.5rem;">
  Goodbye, World in Turing
  </div>
  Some text about how easy it is to interface with external packages like AbstractGPs. Learn more about modelling [Gaussian Processes](https://turinglang.org/docs/tutorials/15-gaussian-processes/) with Turing.jl.
</div>
</div>
</div>


<!--
::: {.hero-banner}
::: {.grid}
::: {.g-col-1}
:::
::: {.g-col-8}

# Turing.jl: Bayesian inference with probabilistic programming. 

### Intuitive
Turing models are easy to write and communicate — syntax is close to mathematical notations. 

### General-purpose
Turing supports models with discrete parameters and stochastic control flow. 

### Modular and composable 
Turing is modular, written entirely in Julia, and is interoperable with the powerful Julia ecosystem. 


::: {.hero-buttons style="position: relative; display: flex; justify-content: center;"}
[Get Started]({{< meta get-started >}}){.btn-action-primary .btn-action .btn .btn-lg role="button" style="background-color: #073c44; color: white"}
:::

::: {.g-col-3}
:::
:::
:::

:::

::: {style="position: relative; display: flex; justify-content: center;"}
::: {.grid}
::: {.g-col-1}
:::
::: {.g-col-8}
## Community Resources

The Turing.jl [discourse forum](https://discourse.julialang.org/c/domain/probprog) provides support and discussion for all user levels.
The [Turing.jl documentation]({{< meta get-started >}}) and [official tutorials]({{< meta tutorials-intro >}}) help users learn and use Turing.jl!
There's also a [tutorial in Bayesian Statistics using Julia and Turing.jl](https://storopoli.io/Bayesian-Julia).

:::
::: {.g-col-3}
:::
:::
:::
-->