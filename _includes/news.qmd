---
listing:
- id: news
  contents:
    - "news/posts/*/index.qmd"
  # max-items: 10
  sort: date desc
  type: grid
  grid-columns: 3
  categories: false
  sort-ui: false
  filter-ui: false
  fields: [title, description, date, reading-time, author]
  image-height: "200"
  max-description-length: 100
---

### News

::: {#news}
:::

[See all news &rarr;](news/)

```{=html}
<style>
/* hide default Quarto grid once JS enhancement is active */
#listing-news.enhanced-carousel .list.grid.quarto-listing-cols-3 {
  display: none !important;
}

#carousel-container {
  width: 100%;
  overflow: hidden;
  position: relative;
}

#carousel-container:focus {
  outline: 2px solid #007acc;
  outline-offset: 4px;
}

#carousel-track {
  display: flex;
  align-items: stretch;
  transition: transform 0.7s cubic-bezier(0.25, 1, 0.5, 1);
  will-change: transform;
}

#carousel-track>.g-col-1 {
  flex: 0 0 33.3333%;
  padding: 1rem;
  box-sizing: border-box;
  display: block !important;
  min-width: 0;
}

@media (max-width: 1024px) and (min-width: 769px) {
  #carousel-track>.g-col-1 {
    flex: 0 0 50%;
  }
}

@media (max-width: 768px) {
  #carousel-track>.g-col-1 {
    flex: 0 0 100%;
  }
}

.quarto-listing {
  padding-bottom: 0 !important;
}

#carousel-track>.g-col-1 .card.news-item {
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

#carousel-track>.g-col-1 .card-body {
  flex-grow: 1;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

#carousel-track>.g-col-1 .card-img-top {
  max-height: 150px;
  object-fit: cover;
}

#carousel-track .listing-title {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

#carousel-track .listing-description {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  line-clamp: 2;
  overflow: hidden;
  text-overflow: ellipsis;
}

#carousel-track .card-attribution {
  margin-top: auto;
  padding-top: 1rem;
  display: flex;
  align-items: flex-end;
  gap: 1em;
}

#carousel-track .listing-author {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  min-width: 0;
}

#carousel-track .listing-date {
  white-space: nowrap;
  flex-shrink: 0;
}

/* Carousel Buttons */
.carousel-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: transparent;
  color: #999;
  border: none;
  border-radius: 50%;
  width: 3rem;
  height: 3rem;
  margin: 0 0.75rem;
  font-size: 1.5rem;
  font-weight: bold;
  cursor: pointer;
  z-index: 10;
  opacity: 0;
  transition: all 0.2s ease-in-out;
  display: flex;
  align-items: center;
  justify-content: center;
}

#carousel-container:hover .carousel-button,
#carousel-container:focus-within .carousel-button {
  opacity: 1;
}

.carousel-button.prev {
  left: 0;
}

.carousel-button.next {
  right: 0;
}

.carousel-button:hover,
.carousel-button:focus {
  background: rgba(0, 0, 0, 0.05);
  color: #000;
  outline: none;
}
</style>

<script>
  // The script block remains the same as the previous version.
  document.addEventListener('DOMContentLoaded', function () {
    const listing = document.getElementById('listing-news');
    if (!listing) return;

    const originalItems = Array.from(
      listing.querySelectorAll('.list.grid.quarto-listing-cols-3 > .g-col-1')
    );
    const N_original = originalItems.length;

    let itemsPerView = getItemsPerView();

    if (N_original <= itemsPerView) {
        listing.classList.remove('enhanced-carousel');
        return;
    }

    listing.classList.add('enhanced-carousel');

    const carouselContainer = document.createElement('div');
    carouselContainer.id = 'carousel-container';
    carouselContainer.setAttribute('tabindex', '0');
    
    const carouselTrack = document.createElement('div');
    carouselTrack.id = 'carousel-track';

    const prevButton = document.createElement('button');
    prevButton.className = 'carousel-button prev';
    prevButton.setAttribute('aria-label', 'Previous slide');
    prevButton.innerHTML = '&#10094;';

    const nextButton = document.createElement('button');
    nextButton.className = 'carousel-button next';
    nextButton.setAttribute('aria-label', 'Next slide');
    nextButton.innerHTML = '&#10095;';

    carouselContainer.append(carouselTrack, prevButton, nextButton);
    listing.parentNode.insertBefore(carouselContainer, listing.nextSibling);

    const postClones = [];
    for (let i = 0; i < itemsPerView; i++) {
        const clone = originalItems[i % N_original].cloneNode(true);
        clone.classList.add('clone');
        postClones.push(clone);
    }
    const preClones = [];
    for (let i = N_original - itemsPerView; i < N_original; i++) {
        const clone = originalItems[i].cloneNode(true);
        clone.classList.add('clone');
        preClones.push(clone);
    }

    carouselTrack.append(...preClones, ...originalItems, ...postClones);
    
    const allItems = carouselTrack.querySelectorAll('.g-col-1');
    allItems.forEach(item => {
        const titleElement = item.querySelector('.listing-title');
        if (titleElement) {
            titleElement.setAttribute('title', titleElement.textContent.trim());
        }
    });

    let currentIndex = itemsPerView;
    let shiftPercent = 100 / itemsPerView;
    const transitionDuration = 700;
    const displayDuration = 3000;
    let intervalId;

    function moveTo(index, withAnimation = true) {
        carouselTrack.style.transition = withAnimation
            ? `transform ${transitionDuration / 1000}s cubic-bezier(0.25, 1, 0.5, 1)`
            : 'none';
        currentIndex = index;
        carouselTrack.style.transform = `translateX(-${currentIndex * shiftPercent}%)`;
    }

    moveTo(currentIndex, false);

    function nextSlide() {
        moveTo(currentIndex + 1);
    }

    function prevSlide() {
        moveTo(currentIndex - 1);
    }
    
    function startAutoplay() {
        clearInterval(intervalId);
        intervalId = setInterval(nextSlide, displayDuration);
    }
    
    function stopAutoplay() {
        clearInterval(intervalId);
    }

    nextButton.addEventListener('click', () => { stopAutoplay(); nextSlide(); });
    prevButton.addEventListener('click', () => { stopAutoplay(); prevSlide(); });

    carouselTrack.addEventListener('transitionend', () => {
        if (currentIndex >= N_original + itemsPerView) {
            moveTo(itemsPerView + (currentIndex - N_original - itemsPerView), false);
        }
        if (currentIndex < itemsPerView) {
            moveTo(N_original + (currentIndex), false);
        }
    });

    ['mouseenter', 'focusin'].forEach(e => carouselContainer.addEventListener(e, stopAutoplay));
    ['mouseleave', 'focusout'].forEach(e => carouselContainer.addEventListener(e, startAutoplay));
    document.addEventListener('visibilitychange', () => document.hidden ? stopAutoplay() : startAutoplay());

    function getItemsPerView() {
      const width = window.innerWidth;
      if (width <= 768) return 1;
      if (width > 768 && width <= 1024) return 2;
      return 3;
    }

    window.addEventListener('resize', () => {
        window.location.reload();
    });

    startAutoplay();
  });
</script>
```