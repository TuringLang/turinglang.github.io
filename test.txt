==================
index.qmd:
==================
---
toc: false
page-layout: full
section-divs: false
hide-description: true
description: |
  Turing.jl is a probabilistic programming language and Bayesian modelling framework for the Julia programming language.
---

{{< include _includes/header.qmd >}}

::::: {.d-flex .flex-row .flex-wrap .panel-wrapper .gap-4 .section-end-space}

::: {.panel}
##### Expressive {.panel-title .pb-1}
Turing models are easy to write and communicate, with syntax that is close to the mathematical specification of the model.
:::

::: {.panel}
##### General-purpose {.panel-title .pb-1}
Turing supports models with discrete parameters and stochastic control flow.
:::

::: {.panel}
##### Composable {.panel-title .pb-1}
Turing is written entirely in Julia, and is interoperable with its powerful ecosystem.
:::

:::::

{{< include _includes/news.qmd >}}

### Learn more

```{=html}
<div class="list grid quarto-listing-cols-3">
  <a class="pseudolisting" href="/library">
    <div class="card-title h5">
      Ecosystem
    </div>
    <p class="quarto-grid-item">
      Learn about all the packages that are part of the TuringLang organization.
    </p>
  </a>
  <a class="pseudolisting" href="https://turinglang.org/docs/tutorials/docs-00-getting-started/">
    <div class="card-title h5">
      Documentation
    </div>
    <p class="quarto-grid-item">
      Familiarize yourself with the mechanics of Turing.jl.
    </p>
  </a>
  <a class="pseudolisting" href="https://turinglang.org/docs/tutorials/00-introduction/">
    <div class="card-title h5">
      Official tutorials
    </div>
    <p class="quarto-grid-item">
      Learn to tackle specific modelling problems with Turing.jl.
    </p>
  </a>
</div>
```

<!-- TODO

::: {.section-start-space}

### Algorithms

Placeholder text introducing this section on algorithms.

| Column 1 | Column 2 | Column 3 | Column 4 |
|----------|----------|----------|----------|
|  Entry A |  Entry D |  Entry G |  Entry J |
|  Entry B |  Entry E |  Entry H |  Entry K |
|  Entry C |  Entry F |  Entry I |  Entry L |

: Supported MCMC and other learning algorithms {.striped .borderless}

:::

::: {.section-start-space}

### Bayesian Workflow

Placeholder text introducing the Bayesian Workflow diagram from the ACM special issue submission.

```{=html}
<div style="text-align:center;">
<img src="https://i0.wp.com/www.honeybeesuite.com/wp-content/uploads/2019/09/Multiple-teeth-HBS.jpg?w=400&ssl=1" style="margin:0.5rem 0;border-radius:10pt">
<p>An example of the Beeysian workflow.</p>
</div>
```

:::

-->

<!-- TODO

```{=html}
<div class="d-flex flex-row panel-wrapper gap-3 section-start-space">
<div class="flex-grow-1">
<h3>Talks</h3>
  <p>Placeholder for intro text on list of talks which are available online</p>
  <ul>
    <li>Talk 1
    <li>Talk 2
    <li>Talk 3
  </ul>
</div>
<div class="flex-grow-1">
  <h3>Other resources</h3>
  <p>This list contains a few other written resources for learning Turing. If you have written something and would like to share it with the community, please <a href="https://github.com/TuringLang/docs/issues/new">get in touch</a>!</p>
  <ul>
    <li><a href="https://github.com/StatisticalRethinkingJulia/SR2TuringPluto.jl">Statistical Rethinking</a>
    <li><a href="https://storopoli.github.io/Turing-Workshop/">Jose Storopoli's Turing workshop (outdated in parts)</a>
    <li><a href="https://storopoli.github.io/Bayesian-Julia/">Jose Storopoli's blog on Turing and Bayesian Statistics</a>
    <li>Placeholder for more...
  </ul>
</div>
</div>
``` 
-->

<div class="section-start-space">

{{< include _includes//citation/cite.qmd >}}

</div>


==================
theming/styles.css
==================
.navbar a:hover {
  text-decoration: none;
}

.cell-output {
  border: 1px dashed;
}

.cell-output-stdout code {
  word-break: break-word !important;
  white-space: pre-wrap !important;
}

.cell-output-display svg {
  height: fit-content;
  width: fit-content;
}

.cell-output-display img {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

.nav-footer-center {
  display: flex;
  justify-content: center;
}

.line-graph {
  width: 100%;
  padding-top: 5%;
  position: relative;
}

svg {
  width: 100%;
  height: 100%;
}

@keyframes draw {
  to {
    stroke-dashoffset: 0;
  }
}

.line {
  fill: none;
  stroke-width: 7;
  stroke-dasharray: 3900;
  stroke-dashoffset: 3900;
  animation: draw 6s forwards ease-in-out;
  stroke-opacity: 1;
}

.line1 {
  stroke: #b352cc;
  animation-delay: 0s;
}

.line2 {
  stroke: #cc3333;
  animation-delay: 0.5s;
}

.line3 {
  stroke: #218921;
  animation-delay: 1s;
}

.upper-content {
  width: 88%;
  text-align: end;
  padding-top: 7%;
  padding-right: 45%;
  position: absolute;
  z-index: 5;
  opacity: 0;
  animation: fadeInText 1s forwards ease-in-out;
  animation-delay: 0.5s;
}

@keyframes fadeInText {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.upper-content>h1 {
  font-size: 5rem;
  font-family: "Gill Sans", "Gill Sans MT", Calibri, "Trebuchet MS", sans-serif;
}

.upper-content>p {
  font-size: 25px;
  font-family: "Gill Sans", "Gill Sans MT", Calibri, "Trebuchet MS", sans-serif;
  margin-top: 5%;
}

@media screen and (max-width: 992px) {
  .upper-content>h1 {
    font-size: 3.5rem;
  }
}

@media screen and (max-width: 768px) {
  .upper-content {
    width: 100%;
    padding-top: 0%;
    padding-right: 0%;
    text-align: center;
  }
}

.content-panel {
  padding: 1.5rem;
}

.section-end-space {
  padding-bottom: 2rem;
}

.section-start-space {
  padding-top: 2rem;
}

.responsive-heading {
  font-size: clamp(2rem, 6vw, 6rem);
}

.panel-wrapper {
  justify-content: space-between;
}

.example-code {
  flex: 0 1 45%;
}

.example-text {
  flex: 0 1 53%;
}

@media screen and (max-width: 992px) {
  .panel-wrapper {
    justify-content: center;
  }
}

@media screen and (max-width: 768px) {
  .example-code,
  .example-text {
    flex: 0 1 100%;
  }
}

a {
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

.button,
.button--fill {
  display: inline-block;
  padding: 10px 24px;
  border-radius: 50px;
  font-weight: 600;
  text-align: center;
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  text-decoration: none;
  border-style: solid;
  border-width: 2px;
}

.button:hover,
.button--fill:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  text-decoration: none;
}

.panel {
  border-radius: 12px;
  padding: 2rem;
  min-height: 150px;
  min-width: 300px;
  max-width: 31%;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  border-top: 4px solid;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
}

.panel:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
}

.panel-title {
  font-size: 1.4rem;
  font-weight: 700;
  margin-bottom: 1rem;
}

.panel--nopad {
  padding: 0rem;
}

.card,
.pseudolisting {
  border-radius: 0.5rem;
  transition: background-color 0.3s ease, border-color 0.3s ease;
}

.pseudolisting {
  padding: 1rem;
}

.card .card-title,
.pseudolisting .h5 {
  font-weight: 700;
}

.pseudolisting {
  display: block;
  text-decoration: none;
}

.pseudolisting:hover {
  text-decoration: none;
}

.button {
  background-color: #ffffff;
  border-color: #e9ecef;
  color: #495057;
}

.button--fill {
  background-color: #4DB6AC;
  border-color: transparent;
  color: #ffffff;
}

.button--fill:hover {
  background-color: #26A69A;
}

.panel {
  background-color: #ffffff;
  border-top-color: #4DB6AC;
}

.panel-title {
  color: #212529;
}

.panel,
.panel p {
  color: #6c757d;
  font-size: 17px;
  font-weight: 400;
}

.card,
.pseudolisting,
#carousel-container .quarto-grid-item.card.news-item {
  background-color: #f8f9fa;
  border: 1px solid #e9ecef;
  color: #212529;
}

.card:hover,
.pseudolisting:hover,
#carousel-container .quarto-grid-item.card.news-item:hover {
  background-color: #e9ecef;
  border-color: #dee2e6;
}

.card .card-title {
  color: #212529;
}

.card .card-text {
  color: #6c757d;
}

.sourceCode,
code {
  color: #212529;
  border-radius: 0.5rem;
}


==================
theming/theme-dark.scss
==================
/*-- scss:defaults --*/
// Cosmo 5.3.3
// Bootswatch

$theme: "cosmo" !default;

// --- Consolidated Variables ---

// Base colors for the entire site
$background-nav: #22272e;
$background-body: #1c2128; // Using the darker background from new theme
$foreground: #ffffff;
$links: #34b8bf;
$links-hover: #31dce6;

// Text colors
$text-muted: #bcbcbc;
$li-color: #bcbcbc;

// Landing Page specific colors
$lp-cyan: #39d3d7;
$lp-teal: #4DB6AC;

// Component & Code block colors
$code-block-bg: #22272e;
$panel-bg: #22272e;
$btn-border-color: #444c56;

// Bootstrap color overrides
$white: #ffffff !default;
$gray-800: #22272e;
$gray-900: #1c2128;
$red: #ff0039 !default;
$green: #3fb618 !default;

$primary: $links-hover !default;
$secondary: $gray-800 !default;
$success: $green !default;
$danger: $red !default;

// Global settings
$min-contrast-ratio: 2.6 !default;
$enable-rounded: false !default;
$font-family-sans-serif: "Source Sans Pro", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol" !default;
$headings-font-weight: 400 !default;

$navbar-bg: $background-nav;
$navbar-fg: $foreground;
$footer-bg: $background-nav;
$footer-fg: $foreground;
$body-color: $white;
$body-bg: $background-body;


/*-- scss:rules --*/

// --- Global Styles ---
p {
    color: $text-muted !important;
}

li {
    color: $li-color !important;
}

a {
    color: $links;

    &:hover {
        color: $links-hover !important;
    }
}

// Landing Page Buttons
.button {
    background-color: transparent !important;
    border-color: $btn-border-color !important;
    color: $body-color !important;

    &:hover {
        background-color: lighten($gray-800, 5%) !important;
        border-color: $lp-cyan !important;
    }
}

.button--fill {
    background-color: $lp-teal !important;
    border-color: transparent !important;
    color: #ffffff !important;

    &:hover {
        background-color: darken($lp-teal, 5%) !important;
        box-shadow: 0 4px 15px rgba($lp-teal, 0.2) !important;
    }
}

// Landing Page Panels
.panel {
    background-color: $panel-bg !important;
    border-top-color: $lp-teal !important;
    border-left: 1px solid $btn-border-color !important;
    border-right: 1px solid $btn-border-color !important;
    border-bottom: 1px solid $btn-border-color !important;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2) !important;
    color: $text-muted !important;

    .panel-title {
        color: $body-color !important;
    }
}

// Misc Quarto and site-specific rules
.quarto-title-banner {
    background-color: $background-nav !important;
}

.title {
    color: $white !important;
}

.team-member,
.input-group-text {
    background-color: $background-nav !important;
}

.level4,
.listing-category {
    color: $foreground !important;
}

.badge.deprecated {
    color: $white !important;
    background-color: $red !important;
}

// table background & text
.packages-table {
    color: $text-muted !important;
    background-color: $background-nav !important;
}

// cell borders
.packages-table th,
.packages-table td {
    border-bottom-color: $gray-900 !important;
}

// header row
.packages-table thead {
    background-color: $background-nav !important;
}

// zebra stripes
.packages-table tbody tr:nth-child(odd) {
    background-color: darken($gray-900, 5%) !important;
}

// hover state
.packages-table tbody tr:hover {
    background-color: lighten($background-nav, 5%) !important;
}

// “Deprecated” badge styling
.badge.deprecated {
    color: $white !important;
    background-color: $red !important;
}

code {
    background-color: $code-block-bg !important;
    color: $li-color !important;
}

.card {
    background-color: #f8f9fa !important;
}

// --- Mixins ---
@mixin raw-card {
    border-radius: $border-radius-sm;
    padding: 1rem;
    --bs-card-spacer-x: 0rem !important;
    --bs-card-spacer-y: 0rem !important;
    color: $body-color !important;
    background-color: $code-block-bg !important;
    border: solid $code-block-bg 1px !important;
    transition: background-color 0.3s ease, border-color 0.3s ease !important;
}

@mixin card($hover-border) {
    @include raw-card;

    .card-title {
        color: $body-color !important;
        font-weight: 700;
    }

    &:hover {
        background-color: lighten($code-block-bg, 5%) !important;
        border-color: $hover-border !important;
    }
}

// Card and Pseudolisting styles
.card {
    @include card($lp-cyan);

    .card-text {
        color: $text-muted;
    }
}

.pseudolisting {
    @extend .card;

    &:hover {
        text-decoration: none;
    }
}

.aa-DetachedOverlay li.aa-Item[aria-selected=true] .search-item * {
    color: white !important;
}

.aa-List li.aa-Item[aria-selected="true"] * {
    background-color: $lp-teal !important;
}

.tooltip-inner {
    color: white;
}


==================
_includes/news.qmd
==================
---
listing:
- id: news
  contents:
    - "news/posts/*/index.qmd"
  # max-items: 10
  sort: date desc
  type: grid
  grid-columns: 3
  categories: false
  sort-ui: false
  filter-ui: false
  fields: [title, description, date, reading-time, author]
  image-height: "200"
  max-description-length: 100
---

### News

::: {#news}
:::

[See all news &rarr;](news/)

```{=html}
<style>
/* hide default Quarto grid once JS enhancement is active */
#listing-news.enhanced-carousel .list.grid.quarto-listing-cols-3 {
  display: none !important;
}

#carousel-container {
  overflow: hidden;
  cursor: grab;
}

#carousel-container.grabbing {
  cursor: grabbing;
}

#carousel-track {
  display: flex;
  align-items: stretch;
}

#carousel-track>.g-col-1 {
  flex: 0 0 33.3333%;
  padding: 1rem;
  box-sizing: border-box;
  display: block !important;
  min-width: 0;
}

#carousel-container.grabbing a {
  pointer-events: none;
}

@media (max-width: 1024px) and (min-width: 769px) {
  #carousel-track>.g-col-1 {
    flex: 0 0 50%;
  }
}

@media (max-width: 768px) {
  #carousel-track>.g-col-1 {
    flex: 0 0 100%;
  }
}

.quarto-listing {
  padding-bottom: 0 !important;
}

#carousel-track>.g-col-1 .card.news-item {
  overflow: hidden;
  display: flex;
  flex-direction: column;
  height: 100%;
}

#carousel-track>.g-col-1 .card-body {
  flex-grow: 1;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

#carousel-track>.g-col-1 .card-img-top {
  max-height: 150px;
  object-fit: cover;
}

#carousel-track .listing-title {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

#carousel-track .listing-description {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  line-clamp: 2;
  overflow: hidden;
  text-overflow: ellipsis;
}

#carousel-track .card-attribution {
  margin-top: auto;
  padding-top: 1rem;
  display: flex;
  align-items: flex-end;
  gap: 1em;
}

#carousel-track .listing-author {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  min-width: 0;
}

#carousel-track .listing-date {
  white-space: nowrap;
  flex-shrink: 0;
}
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const listing = document.getElementById('listing-news');
        if (!listing) return;

        const originalItems = Array.from(listing.querySelectorAll('.list.grid.quarto-listing-cols-3 > .g-col-1'));
        if (originalItems.length === 0) return;

        listing.classList.add('enhanced-carousel');

        const carouselContainer = document.createElement('div');
        carouselContainer.id = 'carousel-container';

        const carouselTrack = document.createElement('div');
        carouselTrack.id = 'carousel-track';

        carouselTrack.append(...originalItems);
        carouselContainer.append(carouselTrack);
        listing.parentNode.insertBefore(carouselContainer, listing.nextSibling);

        const slides = Array.from(carouselTrack.children);
        const displayDuration = 2500;
        let isDragging = false,
            startPos = 0,
            currentTranslate = 0,
            prevTranslate = 0,
            currentIndex = 0,
            hasDragged = false,
            intervalId;

        const getPositionX = (event) => event.type.includes('mouse') ? event.pageX : event.touches[0].clientX;
        const getItemsPerView = () => {
            const width = window.innerWidth;
            if (width <= 768) return 1;
            if (width > 768 && width <= 1024) return 2;
            return 3;
        }
        const stopAutoplay = () => clearInterval(intervalId);
        const startAutoplay = () => {
            stopAutoplay();
            intervalId = setInterval(autoplayNext, displayDuration);
        };

        const dragStart = (event) => {
            isDragging = true;
            hasDragged = false;
            startPos = getPositionX(event);
            const style = window.getComputedStyle(carouselTrack);
            const matrix = new DOMMatrix(style.transform);
            prevTranslate = matrix.m41;
            carouselContainer.classList.add('grabbing');
            carouselTrack.style.transition = 'none';
            stopAutoplay();
        };

        const dragMove = (event) => {
            if (!isDragging) return;
            hasDragged = true;
            const currentPosition = getPositionX(event);
            currentTranslate = prevTranslate + currentPosition - startPos;
            setSliderPosition();
        };

        const dragEnd = () => {
            if (!isDragging) return;
            isDragging = false;
            carouselContainer.classList.remove('grabbing');

            const slideWidth = slides[0].getBoundingClientRect().width;
            const movedBy = currentTranslate - prevTranslate;

            if (movedBy < -50 && currentIndex < slides.length - getItemsPerView()) {
                currentIndex++;
            }
            if (movedBy > 50 && currentIndex > 0) {
                currentIndex--;
            }

            setPositionByIndex();
        };

        const setSliderPosition = () => {
            const maxScroll = -(carouselTrack.scrollWidth - carouselContainer.clientWidth);
            currentTranslate = Math.max(maxScroll, Math.min(0, currentTranslate));
            carouselTrack.style.transform = `translateX(${currentTranslate}px)`;
        };

        const setPositionByIndex = () => {
            const slideWidth = slides[0].getBoundingClientRect().width;
            currentTranslate = currentIndex * -slideWidth;
            carouselTrack.style.transition = 'transform 0.4s ease-out';
            setSliderPosition();
        };

        const autoplayNext = () => {
            const itemsPerView = getItemsPerView();
            const maxIndex = slides.length - itemsPerView;
            currentIndex = (currentIndex >= maxIndex) ? 0 : currentIndex + 1;
            setPositionByIndex();
        };

        carouselTrack.addEventListener('click', (e) => {
            if (hasDragged) {
                e.preventDefault();
            }
        }, true);

        carouselContainer.addEventListener('mousedown', dragStart);
        carouselContainer.addEventListener('touchstart', dragStart, { passive: true });

        window.addEventListener('mousemove', dragMove);
        window.addEventListener('touchmove', dragMove, { passive: true });

        window.addEventListener('mouseup', dragEnd);
        window.addEventListener('touchend', dragEnd);

        carouselContainer.addEventListener('mouseenter', stopAutoplay);
        carouselContainer.addEventListener('mouseleave', startAutoplay);

        document.addEventListener('visibilitychange', () => document.hidden ? stopAutoplay() : startAutoplay());
        window.addEventListener('resize', () => window.location.reload());

        startAutoplay();
    });
</script>
```